from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram import Bot, Dispatcher, executor
from states import States

from crud_functions import initiate_db, get_all_products  # Импортируем функции

# Создаем экземпляр бота и диспетчера
bot = Bot(token='YOUR_BOT_TOKEN')
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

# Определяем состояния
class UserState(States):
    age = State()
    growth = State()
    weight = State()

# Создаем клавиатуру
inline_keyboard = types.InlineKeyboardMarkup(row_width=1)
calculate_button = types.InlineKeyboardButton(
    text='Рассчитать норму калорий', callback_data='calories')
formulas_button = types.InlineKeyboardButton(
    text='Формулы расчёта', callback_data='formulas')
buy_button = types.InlineKeyboardButton(
    text='Купить', callback_data='buy')
inline_keyboard.add(calculate_button, formulas_button, buy_button)

# Вызов функции инициализации БД
initiate_db()  # Создаем таблицы в базе данных

# Функция для отправки клавиатуры при старте
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer(
        "Добро пожаловать! Выберите действие:",
        reply_markup=inline_keyboard
    )

# Измененная функция, которая реагирует на кнопку "Купить"
@dp.callback_query_handler(lambda call: call.data == 'buy')
async def get_buying_list(message: types.CallbackQuery):
    products = get_all_products()  # Получаем все продукты из БД

    for product in products:
        title, description, price = product
        await message.message.answer(
            f"Название: {title} | Описание: {description} | Цена: {price} \n"
        )

    inline_keyboard_products = types.InlineKeyboardMarkup(row_width=1)
    for product in products:
        title, _, _ = product
        product_button = types.InlineKeyboardButton(
            text=title, callback_data="product_buying"
        )
        inline_keyboard_products.add(product_button)

    await message.message.answer(
        "Выберите продукт для покупки:",
        reply_markup=inline_keyboard_products
    )

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)